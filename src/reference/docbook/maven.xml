<?xml version="1.0" encoding="UTF-8"?>
<chapter xml:id="maven" 
    xmlns="http://docbook.org/ns/docbook" version="5.0"
    xmlns:xl="http://www.w3.org/1999/xlink"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd
        http://www.w3.org/1999/xlink http://www.docbook.org/xml/5.0/xsd/xlink.xsd">

  <title>Maven Dependency Management</title>

  <section id="maven-example-introduction">
  
	<title>Introduction</title>
	
	<para>An alternative to downloading the individual library jars yourself is to use Maven for dependency management. The <ulink url="http://code.google.com/p/maven-android-plugin">
 	<citetitle>Android Maven Plugin</citetitle></ulink> allows developers to utilize Maven's dependency management capabilities within an Android application. Additionally, the <ulink url="http://rgladwell.github.com/m2e-android/">
 	<citetitle>Android Configurator for M2E</citetitle></ulink> bridges the Maven Android Plugin and the <ulink url="http://developer.android.com/sdk/eclipse-adt.html">
 	<citetitle>Android Development Tools (ADT)</citetitle></ulink> to allow the use of dependency management within Eclipse.</para>
	
  </section>

  <section>
	
	<title>Spring Repository</title>
	
	<para>The following repositories are available for all Spring projects. Much more information is available at the <ulink url="https://github.com/spring-projects/spring-framework/wiki/SpringSource-repository-FAQ">
 	<citetitle>Spring Repository FAQ</citetitle></ulink>.</para>
	
	<para>Release versions, such as 1.0.0.RELEASE, are available through <ulink url="http://search.maven.org/">
 	<citetitle>Maven Central</citetitle></ulink> or via the <ulink url="http://repo.spring.io/">
 	<citetitle>Spring Repository</citetitle></ulink>:

		<programlisting language="xml"><![CDATA[
<repository>
    <id>spring-repo</id>
    <name>Spring Repository</name>
    <url>https://repo.spring.io/release</url>
</repository>]]>
		</programlisting>

	</para>

	<para>If you are developing against a milestone version, such as 2.0.0.M1, you will need to add the following repository in order to resolve the artifact:

		<programlisting language="xml"><![CDATA[
<repository>
    <id>spring-milestone</id>
    <name>Spring Milestone Repository</name>
    <url>https://repo.spring.io/milestone</url>
</repository>]]>
		</programlisting>

	</para>

	<para>If you are testing out the latest nightly build version (e.g. 2.0.0.BUILD-SNAPSHOT), you will need to add the following repository:

		<programlisting language="xml"><![CDATA[
<repository>
    <id>spring-snapshot</id>
    <name>Spring Snapshot Repository</name>
    <url>https://repo.spring.io/snapshot</url>
</repository>]]>
		</programlisting>

	</para>
	
  </section>

  <section id="maven-example-pom">

	<title>Example POM</title>
	
	<para>The following <ulink url="http://maven.apache.org/guides/introduction/introduction-to-the-pom.html">
	<citetitle>Maven POM file</citetitle></ulink> from the <ulink url="https://github.com/spring-projects/spring-android-samples">
	<citetitle>Spring for Android Showcase</citetitle></ulink> sample application, illustrates how to configure the <ulink url="http://code.google.com/p/maven-android-plugin">
	<citetitle>Maven Android Plugin</citetitle></ulink> and associated dependencies for use with Spring for Android and Spring Social.</para>
	
	<programlisting language="xml"><![CDATA[
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.springframework.android</groupId>
    <artifactId>spring-android-showcase-client</artifactId>
    <version>1.0.1.BUILD-SNAPSHOT</version>
    <packaging>apk</packaging>
    <name>spring-android-showcase-client</name>
    <url>http://projects.spring.io/spring-android</url>
    <inceptionYear>2010</inceptionYear>
    <organization>
        <name>Spring</name>
        <url>http://spring.io</url>
    </organization>

    <properties>
        <android-platform>16</android-platform>
        <android-maven-plugin-version>3.4.0</android-maven-plugin-version>
        <maven-compiler-plugin-version>2.5.1</maven-compiler-plugin-version>
        <java-version>1.6</java-version>
        <maven-eclipse-plugin-version>2.8</maven-eclipse-plugin-version>
        <com.google.android-version>4.1.1.4</com.google.android-version>
        <!-- Available Android versions: 1.5_r3, 1.5_r4, 1.6_r2, 2.1.2, 2.1_r1, 
            2.2.1, 2.3.1, 2.3.3, 4.0.1.2, 4.1.1.4 -->
        <org.springframework.android-version>1.0.1.BUILD-SNAPSHOT</org.springframework.android-version>
        <com.fasterxml.jackson-version>2.1.2</com.fasterxml.jackson-version>
        <com.google.code.gson-version>2.2.2</com.google.code.gson-version>
        <org.simpleframework-version>2.6.9</org.simpleframework-version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.google.android</groupId>
            <artifactId>android</artifactId>
            <version>${com.google.android-version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.android</groupId>
            <artifactId>spring-android-rest-template</artifactId>
            <version>${org.springframework.android-version}</version>
        </dependency>
        
        <!-- Jackson JSON Processor -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${com.fasterxml.jackson-version}</version>
        </dependency>
        
        <!-- Gson JSON Processor -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${com.google.code.gson-version}</version>
        </dependency>
        
        <!-- Simple XML Processor -->
        <dependency>
            <groupId>org.simpleframework</groupId>
            <artifactId>simple-xml</artifactId>
            <version>${org.simpleframework-version}</version>
            <exclusions>
                <!-- StAX is not available on Android -->
                <exclusion>
                    <artifactId>stax</artifactId>
                    <groupId>stax</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>stax-api</artifactId>
                    <groupId>stax</groupId>
                </exclusion>
                <!-- Provided by Android -->
                <exclusion>
                    <artifactId>xpp3</artifactId>
                    <groupId>xpp3</groupId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <repositories>
        <repository>
            <id>spring-snapshot</id>
            <name>Spring Snapshot Repository</name>
            <url>http://repo.spring.io/libs-snapshot</url>
        </repository>
    </repositories>

    <build>
        <finalName>${project.artifactId}</finalName>
        <sourceDirectory>src</sourceDirectory>
        <plugins>
            <plugin>
                <groupId>com.jayway.maven.plugins.android.generation2</groupId>
                <artifactId>android-maven-plugin</artifactId>
                <version>${android-maven-plugin-version}</version>
                <configuration>
                    <sdk>
                        <platform>${android-platform}</platform>
                    </sdk>
                    <deleteConflictingFiles>true</deleteConflictingFiles>
                    <undeployBeforeDeploy>true</undeployBeforeDeploy>
                </configuration>
                <extensions>true</extensions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin-version}</version>
                <configuration>
                    <source>${java-version}</source>
                    <target>${java-version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>${maven-eclipse-plugin-version}</version>
                <configuration>
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>true</downloadJavadocs>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>]]>
	</programlisting>
  </section>

  <section id="maven-commands">
	<title>Maven Commands</title>
	<para>Once you have configured a Maven POM in your Android project you can use the following Maven command to clean and assemble your Android APK file.</para>
	
	<programlisting><![CDATA[
$ mvn clean install]]>
	</programlisting>
	
	<para>The Android Maven Plugin provides several <ulink url="http://maven-android-plugin-m2site.googlecode.com/svn/plugin-info.html">
 	<citetitle>goals</citetitle></ulink> for use in building and deploying your application. You can configure a specific emulator in the plugin configuration, or if you omit the emulator name, the plugin will attempt to execute the specified goal on all available emulators and devices.</para>
	
	<para>The following command starts the emulator specified in the Maven Android Plugin section of the POM file. If no emulator name is configured, then the plugin attempts to start an AVD with the name of <literal>Default</literal>.</para>
	
	<programlisting><![CDATA[
$ mvn android:emulator-start]]>
	</programlisting>
	
	<para>Deploys the built apk file to the emulator or attached device.</para>
	
	<programlisting><![CDATA[
$ mvn android:deploy]]>
	</programlisting>
	
	<para>Starts the app on the emulator or attached device.</para>
	
	<programlisting><![CDATA[
$ mvn android:run]]>
	</programlisting>
	
	<para>Displays a list of help topics for the Android Maven Plugin.</para>
	
	<programlisting><![CDATA[
$ mvn android:help]]>
	</programlisting>
	
  </section>

</chapter>
